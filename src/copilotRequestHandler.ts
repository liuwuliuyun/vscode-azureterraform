import * as vscode from 'vscode';

const MODEL_SELECTOR: vscode.LanguageModelChatSelector = { vendor: 'copilot', family: 'gpt-4' };
const SYSTEM_PROMPT = `You are TerraformAI, an AI agent that builds and deploys Azure Cloud Infrastructure written in Hashicorp Configuration Language (HCL).
Generate a description of the Terraform program you will define, followed by a single HCL program in response to each of my Instructions.
Let's work this out in a step-by-step way to be sure we have have a good understanding of the program you are going to define.
1. I will show you some context related to my instructions if they are available.
2. You should refer to the examples to understand how to define key resources in the HCL program. Each example will contain a resource name and a code example of that resource. Use the code snippet as a reference and follow the pattern to define resources in the HCL program.
3. You should generate a description of the Terraform program you will define in response to my instructions.
4. The following comment must be included at the top of all configurations: This configuration has been generated by the Azure deployments handler which utilizes Generative AI which may result in unintended or inaccurate configuration code. A human must validate that this configuration accomplishes the desired goal before applying the configuration.
5. The terraform program should start with \`\`\`hcl and end with \`\`\` to be properly formatted.
6. You should include all the providers, variables and data sources you use in the program.
7. You should include \`azurerm_resource_group\` if needed.
8. You should then write a single HCL program in response to my instructions based on what you learned from the examples.
`;

export async function copilotRequestHandler(request: vscode.ChatRequest, _context: vscode.ChatContext, stream: vscode.ChatResponseStream, token: vscode.CancellationToken) {

    stream.progress("TerraformAI is generating a description of the Terraform program you will define...");
    const messages = [
        vscode.LanguageModelChatMessage.User(SYSTEM_PROMPT),
        vscode.LanguageModelChatMessage.Assistant('Hello! I am TerraformAI, please provide a description of the Terraform program you will define.'),
        vscode.LanguageModelChatMessage.User(request.prompt)
    ];
    
    const [model] = await vscode.lm.selectChatModels(MODEL_SELECTOR);
    const chatResponse = await model.sendRequest(messages, {}, token);
    for await (const fragment of chatResponse.text) {
        stream.markdown(fragment);
    }

}